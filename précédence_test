#include <stdio.h>
#include <stdlib.h>

// Définition des structures de données
typedef struct node {
    int vertex;
    struct node* next;
} Node;

typedef struct {
    int numVertices;
    Node** adjLists;
} Graph;

// Fonctions pour la gestion du graphe
Graph* createGraph(int vertices);
void addEdge(Graph* graph, int src, int dest);
void printGraph(Graph* graph);
void freeGraph(Graph* graph);

// Fonction principale
int main() {
    FILE *file = fopen("precedences.txt", "r");
    FILE *outputFile = fopen("output.txt", "w");
    if (file == NULL || outputFile == NULL) {
        perror("Erreur lors de l'ouverture des fichiers");
        return EXIT_FAILURE;
    }

    int maxVertices = 100;
    Graph* graph = createGraph(maxVertices);

    int timeCycle;
    fscanf(file, "%d", &timeCycle); // Lecture du temps de cycle
    fprintf(outputFile, "Temps de cycle: %d\n", timeCycle);

    int src, dest;
    while (fscanf(file, "%d %d", &src, &dest) == 2) {
        addEdge(graph, src, dest);
    }

    printGraph(graph); // Affichage du graphe
    freeGraph(graph); // Libération de la mémoire

    fclose(file);
    fclose(outputFile);

    return EXIT_SUCCESS;
}

// Implémentation des fonctions de graphe
// ...

// N'oubliez pas de compléter les fonctions ci-dessus selon les définitions
